// Generated by CoffeeScript 1.7.1
(function() {
  var categories, clear, close, download, empty, error, line, popup, redraw, remove, save, upload;

  close = function() {
    $('#popup_content').empty();
    return $('#popup').css('display', 'none');
  };

  save = function(filer, db) {
    return filer.write('file.txt', {
      data: JSON.stringify(db),
      type: 'text/plain'
    });
  };

  redraw = function(filter, db) {
    var table;
    $('#content').empty();
    table = $('<table></table>');
    $.each(db, function(index, value) {
      var input, select, submit, tr;
      tr = $('<tr></tr>');
      select = $('<p>' + '</p>');
      input = $('<p>' + value['text'] + '</p>');
      submit = $("<p class='link' title='" + index + "'>Delete</p>");
      submit.click(function() {
        var ask;
        ask = window.confirm('Delete this?');
        if (ask) {
          return remove(filter, db, $(this).attr('title'));
        }
      });
      tr.append($('<td class="select"></td>').append(select));
      tr.append($('<td class="input"></td>').append(input));
      tr.append($('<td class="submit"></tr>').append(submit));
      return table.append(tr);
    });
    table.append(line(filter, db));
    $('#content').append(table);
    return window.scrollTo(0, document.body.scrollHeight);
  };

  line = function(filter, db) {
    var input, select, submit, tr;
    tr = $('<tr class="line"></tr>');
    select = $('<select></select>');
    select.append($('<option>Category</option>'));
    input = $('<input class="text" type="text"></input>');
    input.focus(function() {
      var dt;
      close();
      dt = new Date($.now());
      return $(this).attr('value', dt.getFullYear() + sprintf('.%02d.%02d, ', dt.getMonth(), dt.getDate()) + sprintf('%02d:%02d:%02d | ', dt.getHours(), dt.getMinutes(), dt.getSeconds()));
    });
    submit = $('<p class="link">Save</p>');
    submit.click(function() {
      if (input.val() && input.val()[input.val().length - 2] !== '|') {
        db.push({
          'time': $.now(),
          'category': select.val(),
          'text': '' + input.val()
        });
        save(filter, db);
        return redraw(filter, db);
      }
    });
    input.keypress(function(e) {
      var char;
      char = true;
      if ($(this).val()[$(this).val().length - 2] === '|') {
        char = false;
      }
      if (e.which === 13 && $(this).val() && char) {
        db.push({
          'time': $.now(),
          'category': select.val(),
          'text': '' + input.val()
        });
        save(filter, db);
        return redraw(filter, db);
      }
    });
    tr.append($('<td class="select"></td>').append(select));
    tr.append($('<td class="input"></td>').append(input));
    return tr.append($('<td class="submit"></td>').append(submit));
  };

  popup = function(copy, contents, values) {
    var value, _i, _len;
    $('#popup_content').empty().append(copy.append(contents));
    for (_i = 0, _len = values.length; _i < _len; _i++) {
      value = values[_i];
      $('#popup_content').append(copy.append(value));
    }
    return $('#popup').css('display', 'block');
  };

  categories = function() {
    return $('#categories_link').click(function() {
      var contents, copy;
      contents = $('#categories_template').html();
      copy = $('<div id="categories"></div>');
      return popup(copy, contents, []);
    });
  };

  download = function(filer) {
    return $('#download_link').click(function() {
      var contents, copy, textarea;
      contents = $('#download_template').html();
      copy = $('<div id="download"></div>');
      textarea = $('<textarea></textarea>');
      return filer.open('file.txt', function(file) {
        var reader;
        reader = new FileReader();
        reader.onload = function(e) {
          var copybutton;
          textarea.text(reader.result);
          if (reader.result === '[]') {
            return popup(copy, contents, []);
          } else {
            copybutton = $('<p class="link">Copy</p>');
            copybutton.click(function() {
              return close();
            });
            return popup(copy, contents, [textarea, copybutton]);
          }
        };
        return reader.readAsText(file);
      });
    });
  };

  upload = function(filer) {
    return $('#upload_link').click(function() {
      var contents, copy, savebutton, textarea;
      contents = $('#upload_template').html();
      copy = $('<div id="upload"></div>');
      textarea = $('<textarea></textarea>');
      savebutton = $('<p class="link">Save</p>');
      savebutton.click(function() {
        if (textarea.val()) {
          save(filer, JSON.parse(textarea.val()));
          redraw(filer, JSON.parse(textarea.val()));
          return close();
        }
      });
      return popup(copy, contents, [textarea, savebutton]);
    });
  };

  clear = function(filer) {
    return $('#clear_link').click(function() {
      var ask;
      ask = window.confirm('Would you like to empty the scaffold?');
      if (ask) {
        close();
        return empty(filer);
      }
    });
  };

  $(document).ready(function() {
    var filer;
    filer = new Filer();
    filer.init({
      persistent: true,
      size: 1024 * 1024
    }, function() {
      return filer.open('file.txt', function(file) {
        var reader;
        reader = new FileReader();
        reader.onload = function(e) {
          return redraw(filer, JSON.parse(reader.result));
        };
        reader.readAsText(file);
        categories();
        download(filer);
        upload(filer);
        return clear(filer);
      });
    });
    return $('#close_link').click(function() {
      return close();
    });
  });

  remove = function(filer, db, index) {
    db.splice(index, 1);
    save(filer, db);
    return redraw(filer, db);
  };

  empty = function(filer) {
    save(filer, []);
    return redraw(filer, []);
  };

  error = function(e) {
    return console.log('Error' + e.name);
  };

}).call(this);
